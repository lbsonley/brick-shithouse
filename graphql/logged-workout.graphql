#import loggedSet from "logged-sets.fragments.graphql"
#import loggedWorkout from "logged-workout.fragments.graphql"

query getLoggedWorkoutsByUser($athleteAuth0Id: String!) {
  loggedWorkouts(
    where: {
      athlete: {
        auth0Id: $athleteAuth0Id
      }
  	}
    orderBy: date_DESC
  ) {
    ...loggedWorkout
  }
}

query getLoggedWorkoutById($loggedWorkoutId: ID!) {
  loggedWorkout(where: { id: $loggedWorkoutId }) {
    date
    workout {
      name
      exercises {
        id
        name
        slug
      }
    }
    loggedSets(first: 50) {
      ...loggedSet
    }
  }
}

query getLastLoggedWorkout(
  $workoutSlug: String!,
  $athleteAuth0Id: String!
  $exerciseSlug: String!
  $date: Date!
) {
  workout(where: {slug: $workoutSlug}) {
    loggedWorkouts(
      first: 1
      skip: 1
      where: {
        athlete: { auth0Id: $athleteAuth0Id }
        date_lte: $date
      }
      orderBy: date_DESC
    ) {
      date
      loggedSets(where: {
        exercise: { slug: $exerciseSlug }
      }) {
        ...loggedSet
      }
    }
  }
}

mutation createLoggedWorkout(
  $date:Date!,
  $athleteAuth0Id:String!,
  $workoutSlug:String!
) {
  createLoggedWorkout(
    data: {
      date: $date,
      athlete: {connect: {auth0Id: $athleteAuth0Id}},
      workout: {connect: {slug: $workoutSlug}}}
  ) {
    id
  }
}

mutation publishLoggedWorkout($loggedWorkoutId: ID!) {
  publishLoggedWorkout(where: {id: $loggedWorkoutId}) {
    id
  }
}
